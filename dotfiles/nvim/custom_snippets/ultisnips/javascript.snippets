
# React stuff

snippet imr "Import react" b
import React from "react";
endsnippet

snippet imrp "Import react with PropTypes" b
import React from "react";
import PropTypes from "prop-types";
endsnippet

snippet cmp "Stateless functional component" b
function $1(props) {
	return (
		<div>

		</div>
	);
}
$1.propTypes = {

};
endsnippet

snippet ccmp "Class based component" b
class $1 extends React.Component {
	static propTypes = {

	}

	render() {
		return (
			<div>

			</div>
		);
	}
}
endsnippet


# Redux stuff

snippet rat "Redux action type" b
export const $1 = "${2:}$1";
endsnippet

snippet rata "Redux acync action types" b
export const $1_REQUEST = "${2:}$1_REQUEST";
export const $1_SUCCESS = "$2$1_SUCCESS";
export const $1_FAILURE = "$2$1_FAILURE";
endsnippet

snippet ra "Redux action" b
export const $1Request = createAction(actionTypes.$2);
endsnippet

snippet raa "Redux acync actions" b
export const $1Request = createAction(actionTypes.$2_REQUEST);
export const $1Success = createAction(actionTypes.$2_SUCCESS);
export const $1Failure = createAction(actionTypes.$2_FAILURE);
endsnippet

snippet saga "Simple redux saga" b

function* handle$1(${2:}) {

}

function* watchFor$1() {
	yield takeLatest(actionTypes.$3_REQUEST, handle$1);
}

endsnippet


# Console stuff

snippet ce "console.error" b
console.error(${1:"${2:value}"});
endsnippet

snippet ci "console.info" b
console.info(${1:"${2:value}"});
endsnippet

snippet cl "console.log" b
console.log(${1:"${2:value}"});
endsnippet

snippet cd "console.debug" b
console.debug(${1:"${2:value}"});
endsnippet

snippet cw "console.warn" b
console.warn(${1:"${2:value}"});
endsnippet
