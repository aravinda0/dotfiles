# This file handles setting of various environment variables EXCEPT modifications to
# $PATH. $PATH modifications are stored in $DOTFILES_PATH/zsh/config/path.zsh. See
# related notes in that file.
# Also see $DOTFILES_PATH/zsh/config/plugins.zsh for plugin specific env vars.


# The all-important path to our dotfiles. This is assumed in all other config.
export DOTFILES_PATH=$HOME/.dotfiles

# Dir to hold any supporting files for various tools. We avoid using various dotfiles
# config directories since they may be replaced during backup while installing config
# files/dirs.
export DOTFILES_SUPPORT_PATH=$HOME/.dotfiles_support


# Environment specific files that contain dotfiles that are configured differently for
# different environments
export ENVFILES_PATH=$HOME/Dropbox/env/$HOST


# Notes
export MY_NOTES_PATH=$HOME/.dency/forge


# -------------------------------------------------------------------------------
# General
# -------------------------------------------------------------------------------

# Default editors
export EDITOR='nvim'
export VISUAL='nvim'
export PAGER='less'


# -------------------------------------------------------------------------------
# nvim
# -------------------------------------------------------------------------------

export NVIM_VENVS_PATH=$DOTFILES_SUPPORT_PATH/nvim/venvs
export NVIM_PY3_VENV_PATH=$NVIM_VENVS_PATH/neovim_py_3


# -------------------------------------------------------------------------------
# ripgrep
# -------------------------------------------------------------------------------

export RIPGREP_CONFIG_PATH=$DOTFILES_PATH/ripgrep/ripgreprc


# -------------------------------------------------------------------------------
# NPM
# -------------------------------------------------------------------------------

# Prevents having to use sudo to install global npm packages by specifying a
# user-writeable dir.
# Also needs a corresponding $PATH mod
export NPM_CONFIG_PREFIX=~/.npm-global


# -------------------------------------------------------------------------------
# ssh-agent manager
# -------------------------------------------------------------------------------

# Use `keychain` to manage ssh-agent across shells.
# Also relying on `AddKeysToAgent` option in ssh config so keys get added to ssh-agent
# after first use
eval $(keychain --eval -q)
